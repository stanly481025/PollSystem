package Firebase;

import java.util.concurrent.TimeUnit;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import PollData.PollFinished;
import account.member;

public class FinishedPollAdapter {
	private final FirebaseDatabase database = FirebaseDatabase.getInstance();
	private DatabaseReference ref = database.getReference("server/saving-data/fireblog");
	DatabaseReference usersRef = ref.child("finpolls");
	private boolean decision=false;
	private boolean tmpdecision;
	public FinishedPollAdapter() {}
	
	// create the user  to the firebase	
	public void createFinishedPoll(PollFinished pf) {
		 usersRef.push().setValueAsync(pf);
		    try {
		    	TimeUnit.MILLISECONDS.sleep(800);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}
	//check the writer haven't writer the poll
	public boolean pollFinishedChecked(String id,String writer) {
		 tmpdecision=false;
		 final String tmpWriter=writer;
		 final DatabaseReference usersRef2 = ref.child("finpolls");
		 usersRef2.orderByChild("title").equalTo(id).addListenerForSingleValueEvent(new ValueEventListener() {
				public void onDataChange(DataSnapshot dataSnapshot) {
			    	 if(dataSnapshot.exists()){
				    	  for(DataSnapshot s: dataSnapshot.getChildren()) {	    	
				    		if(s.child("writer").getValue().equals(tmpWriter)) {
				    			 System.out.println("YYYYYYYYYYYYY");
				    			 tmpdecision=true;
				    		}
				    	  }  
			    	 }
			     }   
			     public void onCancelled(DatabaseError databaseError) {
			     }
			 });
		 this.decision=tmpdecision;
		 return this.decision;
	}
	

	
}
