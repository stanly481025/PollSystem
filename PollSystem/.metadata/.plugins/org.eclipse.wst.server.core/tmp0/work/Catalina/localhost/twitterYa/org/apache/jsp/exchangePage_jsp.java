/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2018-06-21 19:27:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import account.*;
import twitter.twitter.*;
import watsonTest.watsonTest.*;
import Firebase.*;

public final class exchangePage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("Firebase");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("twitter.twitter");
    _jspx_imports_packages.add("watsonTest.watsonTest");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("account");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <title>兌換頁面</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .headImg{\r\n");
      out.write("            width:200px;\r\n");
      out.write("            height:220px;\r\n");
      out.write("        }\r\n");
      out.write("        .backButton{\r\n");
      out.write("            width:100px;\r\n");
      out.write("            height:60px;\r\n");
      out.write("            position:relative;\r\n");
      out.write("            right:600px;\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("        }\r\n");
      out.write("        .getRewardButton{\r\n");
      out.write("            width:100px;\r\n");
      out.write("            height:60px;\r\n");
      out.write("            position:relative;\r\n");
      out.write("            left:800px;\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("        }\r\n");
      out.write("        .itemImg{\r\n");
      out.write("            width:300px;\r\n");
      out.write("            height:200px;\r\n");
      out.write("            position:relative;\r\n");
      out.write("            right:300px;\r\n");
      out.write("        }\r\n");
      out.write("        .itemText{\r\n");
      out.write("            font-size:26px;\r\n");
      out.write("            position:relative;\r\n");
      out.write("            right:120px;\r\n");
      out.write("        }\r\n");
      out.write("        .itemTextField{\r\n");
      out.write("            width:50px;\r\n");
      out.write("            height:50px;\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("            text-align:center;\r\n");
      out.write("        }\r\n");
      out.write("        .needCost{\r\n");
      out.write("            font-size:24px;\r\n");
      out.write("            position:relative;\r\n");
      out.write("            left:500px;\r\n");
      out.write("            bottom:70px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("        function countSum()\r\n");
      out.write("        {\r\n");
      out.write("            var totalCost = 0;\r\n");
      out.write("            var reward1 = 0;\r\n");
      out.write("            var reward2 = 0;\r\n");
      out.write("            var reward3 = 0;\r\n");
      out.write("            reward1 = document.getElementsByName(\"reward1\")[0].value\r\n");
      out.write("            reward2 = document.getElementsByName(\"reward2\")[0].value;\r\n");
      out.write("            reward3 = document.getElementsByName(\"reward3\")[0].value;\r\n");
      out.write("            totalCost = parseInt(reward1 * 250 + reward2 * 100 + reward3 * 1);\r\n");
      out.write("            document.getElementById(\"total\").innerHTML = totalCost;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div style=\"text-align:center;\">\r\n");
      out.write("      <form action=\"mainPage.jsp\">\r\n");
      out.write("          <input type=\"submit\" value=\"返回\" class=\"backButton\"/>\r\n");
      out.write("          <span style=\"font-size:48px;\">兌換獎勵</span>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <hr />\r\n");
      out.write("    <div>\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <img src=\"noone.jpg\" class=\"headImg\">\r\n");
      out.write("                </td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <form method=\"post\" action=\"connectTwitterServlet\">\r\n");
      out.write("                        <h2>名稱 : <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${nowUser.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></h2>\r\n");
      out.write("                        <h2>帳號 : <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${nowUser.accountNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></h2>\r\n");
      out.write("                        <h2>點數 : <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${nowUser.point}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></h2>\r\n");
      out.write("                        <h2>Twitter ID: \r\n");
      out.write("                        <span>\r\n");
      out.write("                        ");

                        	member nowUser = (member) session.getAttribute("nowUser");
                        	if(nowUser.gettwitterID() == null)
                        	{
                        		out.print("<input type='text' name='twitterID'><input type='submit' value='連接twiiterID'>");
                        	}
                        	else
                        	{
                        		out.print( nowUser.gettwitterID() );
                        	}
                        
      out.write("\r\n");
      out.write("                       \r\n");
      out.write("                        </span></h2>\r\n");
      out.write("                        <br />\r\n");
      out.write("                        <h2>Bouns關鍵字 : \r\n");
      out.write("                        ");


                        if(nowUser.gettwitterID() != null)
                    	{
                        	String postArticle; 
                        	//System.out.println("ddddddddddddddddddd");
                        	//System.out.println(nowUser.getkeywordList());
	                        postArticle = testTwitter.TwitterAPI(nowUser); 
	                        TwitterKeywordAnalysis.keywordAnalysis(nowUser, postArticle); 
	                        for(int i = 0 ;i<nowUser.getkeywordList().size();i++) 
	                        { 
	                        	out.print(nowUser.getkeywordList().get(i)); 
	                        	//last time print out
	                        	if(i!=nowUser.getkeywordList().size()-1)
	                        		out.print(", "); 
	                        }
	                        
	                        

		               	     member tempnowUser=nowUser;
		               		 FirebaseAdapter memberAdt=  new FirebaseAdapter();
		               		 memberAdt.UpdateMember(tempnowUser, nowUser.getAccountNumber());
                    	}
                        
      out.write("\r\n");
      out.write("                        </h2>\r\n");
      out.write("                       \r\n");
      out.write("                    </form>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("    <hr />\r\n");
      out.write("    <div>\r\n");
      out.write("        <form method= \"Post\" action=\"exchangeServlet\">\r\n");
      out.write("            <table align=\"center\">\r\n");
      out.write("                <tr style=\"font-size:22px; text-decoration:underline;\">\r\n");
      out.write("                    <td style=\"position:relative; right:180px;\"> 物 品 圖 片</td>\r\n");
      out.write("                    <td> 物 品 名 稱</td>\r\n");
      out.write("                    <td> 兌 換 數 量</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><img src=\"mmm.jpg\" class=\"itemImg\"/></td>\r\n");
      out.write("                    <td class=\"itemText\"> 麥當勞套餐兌換卷 - 250 點數/一份</td>\r\n");
      out.write("                    <td> 兌換數量 : <input type=\"text\" name=\"reward1\" class=\"itemTextField\" value=\"0\" onkeyup=\"countSum()\"/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><img src=\"startbark.jpg\" class=\"itemImg\"/></td>\r\n");
      out.write("                    <td class=\"itemText\"> 星巴克咖啡類兌換卷 - 100 點數/一份</td>\r\n");
      out.write("                    <td> 兌換數量 : <input type=\"text\" name=\"reward2\" class=\"itemTextField\" value=\"0\" onkeyup=\"countSum()\"/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><img src=\"711shopping.png\" class=\"itemImg\"/></td>\r\n");
      out.write("                    <td class=\"itemText\"> 7-11購物金50元 - 1點數/一份</td>\r\n");
      out.write("                    <td> 兌換數量 : <input type=\"text\" name=\"reward3\" class=\"itemTextField\" value=\"0\" onkeyup=\"countSum()\"/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            <input type=\"submit\" value=\"兌換\" class=\"getRewardButton\" />\r\n");
      out.write("            <h3 class=\"needCost\">所需點數 : <span id=\"total\">0</span></h3>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
