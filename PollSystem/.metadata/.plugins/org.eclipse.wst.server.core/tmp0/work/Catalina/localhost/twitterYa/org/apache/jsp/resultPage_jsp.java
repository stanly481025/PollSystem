/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2018-06-21 20:50:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import java.net.*;
import pollSystem.*;
import PollData.*;

public final class resultPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("pollSystem");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("PollData");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("   <head>\r\n");
      out.write("      <meta charset = \"utf-8\">\r\n");
      out.write("      <title>結果</title>\r\n");
      out.write("\t  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\t  <script src=\"d3.min.js\"></script>\r\n");
      out.write("      <script>\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t var count = 0;    //接上後可忽略\r\n");
      out.write("\t\t var countt = 0;\r\n");
      out.write("\t\t var x = \"\";\r\n");
      out.write("\t\t var E = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\r\n");
      out.write("\t\t\t              \"AA\", \"AB\", \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\",\r\n");
      out.write("\t\t\t\t\t\t  \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\", \"BJ\", \"BK\", \"BL\", \"BM\", \"BN\", \"BO\", \"BP\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BU\", \"BV\", \"BW\", \"BX\", \"BY\", \"BZ\"];\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t function addQ(y, total)\r\n");
      out.write("\t\t {\r\n");
      out.write("\t\t\tvar r = 0;\r\n");
      out.write("\t\t\tvar g = 0;\r\n");
      out.write("\t\t\tvar b = 0;\r\n");
      out.write("\t\t\t//var tt = Math.floor(Math.random()*5)+2;//選項數目\r\n");
      out.write("\t\t\t//console.log(\"add:\" + tt);\r\n");
      out.write("\t\t\t//測試內容\r\n");
      out.write("\t\t\t//var quest = \"quest\";\r\n");
      out.write("\t\t\t//此處加入標題\r\n");
      out.write("\t\t\tvar ttt = 400;\r\n");
      out.write("\t\t\tvar options = [];\r\n");
      out.write("\t\t\tvar number = 0;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar gg=[];\r\n");
      out.write("\t\t\tvar count =0;\r\n");
      out.write("\t\t\tvar tot=0;\r\n");
      out.write("\t\t\tvar i;\r\n");
      out.write("\t\t\twhile( 0 < y )\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tvar n= parseInt(document.getElementById(\"A0\"+count).getAttribute(\"value\"));\r\n");
      out.write("\t\t\t\tfor(var i=0;i<n;i++)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tgg.push(parseInt(document.getElementById(E[i+tot]).getAttribute(\"value\")));\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tconsole.log(gg);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar value = parseInt(parseInt(document.getElementById(E[i]).getAttribute(\"value\")));\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar div_data_bind = d3.select(\"#\" + E[tot]).selectAll('div').data(gg)\r\n");
      out.write("\t\t\t\tdiv_set = div_data_bind.enter().append(\"div\");\r\n");
      out.write("\t\t\t\tdiv_data_bind.exit().remove();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tconsole.log(value);\r\n");
      out.write("\t\t\t\tdiv_set.style(\"width\", function(d,i) {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"change\");\r\n");
      out.write("\t\t\t\t\t//console.log(d);\r\n");
      out.write("\t                return (100 + d/total*400)+\"px\";\r\n");
      out.write("\t                \r\n");
      out.write("\t            });\r\n");
      out.write("\t\t\t\t//div_set.style(\"position\", \"absolute\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"left\", \"10%\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"top\", \"10%\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"font-size\", \"25px\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"height\", \"30px\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"color\", \"black\");\r\n");
      out.write("\t            div_set.style(\"background\", \"red\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"margin-top\", \"13px\");\r\n");
      out.write("\t\t\t\tdiv_set.style(\"margin-left\", \"50px\");\r\n");
      out.write("\t\t\t\tr = Math.floor((Math.random() * 255) + 1);\r\n");
      out.write("\t\t\t\tg = Math.floor((Math.random() * 255) + 1);\r\n");
      out.write("\t\t\t\tb = Math.floor((Math.random() * 255) + 1);\r\n");
      out.write("\t\t\t\tdiv_set.style(\"background-color\", function(d,i) {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"cchange\");\r\n");
      out.write("\t                return \"rgb(\"+ r + \",\" + g + \",\" + b + \")\";\r\n");
      out.write("\t            });\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tgg=[];\r\n");
      out.write("\t\t\t\ttot=tot+n;\r\n");
      out.write("\t\t\t\ty=y-n;\r\n");
      out.write("\t\t\t\tcount=count+1;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/*\r\n");
      out.write("\t\t\tconsole.log(options);\r\n");
      out.write("\t\t\tvar div_data_bind = d3.select(\"#\" + E[countt]).selectAll(\"div\").data(options);\r\n");
      out.write("\t\t\tconsole.log(div_data_bind);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdiv_set = div_data_bind.enter().append(\"div\");\r\n");
      out.write("\t\t\tdiv_data_bind.exit().remove();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar top = 50;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdiv_set.text(function(d, i)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\treturn i + \" / \" + d[2];\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tdiv_set.style(\"top\", function(d, i)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\treturn  (50 + i *40) + \"px\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdiv_set.style(\"position\", \"absolute\");\r\n");
      out.write("\t\t\tdiv_set.style(\"left\", \"10%\");\r\n");
      out.write("\t\t\tdiv_set.style(\"font-size\", \"25px\");\r\n");
      out.write("\t\t\tdiv_set.style(\"height\", \"30px\");\r\n");
      out.write("\t\t\tdiv_set.style(\"color\", \"black\");\r\n");
      out.write("            div_set.style(\"background\", \"red\");\r\n");
      out.write("\t\t\tdiv_set.style(\"margin-top\", \"20px\");\r\n");
      out.write("            div_set.style(\"width\", function(d,i) {\r\n");
      out.write("                return (d[2] * 5)+\"px\";\r\n");
      out.write("            });\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tcountt++; \r\n");
      out.write("\t\t\tconsole.log(\"add one block\");\r\n");
      out.write("\t\t\t*/\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t function test()\r\n");
      out.write("\t\t {\r\n");
      out.write("\t\t\ttotalOption = parseInt(document.getElementById( \"littleSheepWithFire\" ).getAttribute(\"value\"));\r\n");
      out.write("\t\t\ttotal = parseInt(document.getElementById( \"girlIsOnFire\" ).getAttribute(\"value\"));\r\n");
      out.write("\t\t\taddQ(totalOption, total);\r\n");
      out.write("\t\t\t/*\r\n");
      out.write("\t\t\tcount = ;\r\n");
      out.write("\t\t\tfor(var i = 0; i < count; i++)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\taddQ(i);\r\n");
      out.write("\t\t\t}*/\r\n");
      out.write("\t\t }\r\n");
      out.write("\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t //網頁起始設定\r\n");
      out.write("         function start()\r\n");
      out.write("         {\r\n");
      out.write("\t\t\t//改上面圖片 做好玩的\r\n");
      out.write("            var x = Math.floor(Math.random()*5)+1;\r\n");
      out.write("\t\t\tdocument.getElementById( \"image\" ).setAttribute(\"style\", \"background-image: url('img/\" + x + \".jpg');\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//依解析度改位置\r\n");
      out.write("\t\t\tvar w = (screen.width - 450)/2-40;\r\n");
      out.write("\t\t\tdocument.getElementById( \"titleD\" ).setAttribute(\"style\", \"margin-left:\" + w + \"px;\");\r\n");
      out.write("\t\t\t//生標題div   addQ()\r\n");
      out.write("\t\t\ttest();\r\n");
      out.write("         }\r\n");
      out.write("\t\t \r\n");
      out.write("         window.addEventListener( \"load\", start, false );\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t //回到最上層\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t//動畫方式回到上層\r\n");
      out.write("\t\t$(\"#gotopD\").click(function(){\r\n");
      out.write("\t\t\tjQuery(\"html,body\").animate({scrollTop:0},300);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//目前的位置距離網頁頂端，若大於300px則顯示回上層圖示;否則隱藏\r\n");
      out.write("\t\t$(window).scroll(function() {\r\n");
      out.write("\t\t\tif ( $(this).scrollTop() > 500){\r\n");
      out.write("\t\t\t\t$('#gotopD').fadeIn(\"fast\");\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t$('#gotopD').stop().fadeOut(\"fast\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("      </script>\r\n");
      out.write("\t  <style>\r\n");
      out.write("\t\tbody\t{\r\n");
      out.write("\t\t\t\t\tfont-family: Helvetica, Microsoft YaHei, LiHei Pro, TW-Kai;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/*搜尋Div*/\r\n");
      out.write("\t\t#titleD {\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\tcolor: white;\r\n");
      out.write("\t\t\t\t\ttop: 1%;\r\n");
      out.write("\t\t\t\t\twidth: 450px;\r\n");
      out.write("\t\t\t\t\theight: 200px;\r\n");
      out.write("\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n");
      out.write("\t\t\t\t\tpadding: 5px 5px;\r\n");
      out.write("\t\t\t\t\tborder-radius: 20px;  /*圓角*/\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t/*中間Div*/\r\n");
      out.write("\t\t.contentDiv {\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\tleft: 20%;\r\n");
      out.write("\t\t\t\t\twidth: 55%;\r\n");
      out.write("\t\t\t\t\theight: 160px;\r\n");
      out.write("\t\t\t\t\tmargin-bottom: 50px;\r\n");
      out.write("\t\t\t\t\tbackground-color: #FFFFFF; \r\n");
      out.write("\t\t\t\t\tbox-shadow:4px 3px 2px 1px black;\r\n");
      out.write("\t\t\t\t\tpadding: 5px 5px;\r\n");
      out.write("\t\t\t\t\tborder-radius: 10px;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t.contentDDT {\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\ttop:3%;\r\n");
      out.write("\t\t\t\t\tleft:4%;\r\n");
      out.write("\t\t\t\t\twidth:98%;\r\n");
      out.write("\t\t\t\t\theight: 35px;\r\n");
      out.write("\t\t\t\t\tfont-size: 30px;\r\n");
      out.write("\t\t\t\t\tcolor: blue;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t.contentDDC {\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\tmargin-top:50px;\r\n");
      out.write("\t\t\t\t\tleft:3%;\r\n");
      out.write("\t\t\t\t\twidth: 93%;\r\n");
      out.write("\t\t\t\t\theight: 80%;\r\n");
      out.write("\t\t\t\t\tfont-size: 15px;\r\n");
      out.write("\t\t\t\t\tcolor: gray;\r\n");
      out.write("\t\t\t\t\t//background-color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t/*上圖*/\r\n");
      out.write("\t\t.background1  {\r\n");
      out.write("\t\t\t\t\tbackground-size: cover;\r\n");
      out.write("\t\t\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t\t\t\tbackground-attachment: scroll;\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\ttop: 0%;\r\n");
      out.write("\t\t\t\t\tleft: 0%;\r\n");
      out.write("\t\t\t\t\twidth: 100%;\r\n");
      out.write("\t\t\t\t\theight: 40%;\r\n");
      out.write("\t\t\t\t\tz-index: -998;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t/*中下底*/\r\n");
      out.write("\t\t.background2 {\r\n");
      out.write("\t\t\t\t\tposition: fixed;\r\n");
      out.write("\t\t\t\t\ttop: 0%;\r\n");
      out.write("\t\t\t\t\tleft: 0%;\r\n");
      out.write("\t\t\t\t\twidth: 100%;\r\n");
      out.write("\t\t\t\t\theight: 100%;\r\n");
      out.write("\t\t\t\t\tz-index: -999;\r\n");
      out.write("\t\t\t\t\tbackground-color: rgba(62, 173, 97, 0.63);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t#gotopD {\r\n");
      out.write("\t\t\t\t\tposition: fixed;\r\n");
      out.write("\t\t\t\t\ttop: 92%;\r\n");
      out.write("\t\t\t\t\tleft: 90%;\r\n");
      out.write("\t\t\t\t\theight: 20px;\r\n");
      out.write("\t\t\t\t\twidth: 22px;\r\n");
      out.write("\t\t\t\t\tmargin-right: 200px;\r\n");
      out.write("\t\t\t\t\tbackground: rgba(0, 0, 0, 0.6);\r\n");
      out.write("\t\t\t\t\tpadding: 10px 20px;\r\n");
      out.write("\t\t\t\t\tborder-radius: 10px;  /*圓角*/\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t#gotopP {\r\n");
      out.write("\t\t\t\t\ttext-decoration: none;\r\n");
      out.write("\t\t\t\t\tcolor: white;\r\n");
      out.write("\t\t\t\t\tcursor: pointer;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.options {\r\n");
      out.write("\t\t\t\t\tmargin-top: 20px;\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t.optionD {\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\tleft: 15%;\r\n");
      out.write("\t\t\t\t\tfont-size: 25px;\r\n");
      out.write("\t\t\t\t\theight: 30px;\r\n");
      out.write("\t\t\t\t\tcolor: black;\r\n");
      out.write("\t\t\t\t\tmargin-top: 20px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.optionP {\r\n");
      out.write("\t\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\t\tleft: 3%;\r\n");
      out.write("\t\t\t\t\tfont-size: 15px;\r\n");
      out.write("\t\t\t\t\tcolor: black;\r\n");
      out.write("\t\t\t\t\tmargin-top: 20px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t#titleP {\r\n");
      out.write("\t\t\t\t\tmargin-top: 50px;\r\n");
      out.write("\t\t\t\t\tfont-size: 20px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t  </style>\r\n");
      out.write("   </head>\r\n");
      out.write("   <body>\r\n");
      out.write("\t<div id = \"image\" class = \"background1\"></div>\r\n");
      out.write("\t<div class = \"background2\"></div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!--草之擺標題-->\r\n");
      out.write("\t<div id = \"titleD\">\r\n");
      out.write("\t    <p id = \"titleP\" align = \"center\">\r\n");
      out.write("\t        ");

		        Polls b = (Polls)request.getAttribute("poll");
			    out.print(b.getTitle());
		    
      out.write("\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<p align = \"center\">\r\n");
      out.write("\t        ");

		        caculatePoll m = (caculatePoll)request.getAttribute("poll_caculate");
			    out.print("總共有: " + m.gettotalWriter() + " 個人填寫!");
		    
      out.write("\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--  \r\n");
      out.write("\t<p align = \"center\" style = \"position: absolute; top: 30%; left: 6%; width: 50px; height: 50px;\"><input type = \"button\" value = \"測試新增Q\" onclick = \"test()\"></p>\r\n");
      out.write("\t-->\r\n");
      out.write("\t<!--草之擺題目-->\r\n");
      out.write("\t<div id = \"ContentDiv\">\r\n");
      out.write("        \r\n");
      out.write("\t\t");

		    caculatePoll a = (caculatePoll)request.getAttribute("poll_caculate");
			int total = a.gettotalWriter();
			ArrayList<caculateOption> y = a.getQuestionList();
			Polls c = (Polls)request.getAttribute("poll");
			ArrayList<Question> Q = c.getQuestionList();
			String[] E = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
			              "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ", "AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY", "AZ",
						  "BA", "BB", "BC", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BK", "BL", "BM", "BN", "BO", "BP", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BX", "BY", "BZ"};
			int distance = 0;
			int count = 0;
			int countt = 0;
			int basic_H = 400;
			int question_H = 0;
			int option_C = 0;
			ArrayList<String> options;
			int totalOption = 0;
			int rr = 0;
			int gg = 0;
			int bb = 0;
			
			for(Question q : Q)
			{
				distance = 300 + (440 + 5) * count;
				options = q.getOptionList();
				option_C = options.size();
				
				out.print("<div class = 'contentDiv' style = 'top : " + distance + "px; height: " + basic_H + "px;'><div class ='contentDDT'>" + q.getQuestion() + "</div><div id='A0"+ count +"'  class='contentDDC' value='"+ options.size() +"'>");
				//拿到題目的選項arraylist
				
				countt = 0;
				for(String d : options)
			    {
					rr = (int)(Math.random()*254+1);
					gg = (int)(Math.random()*254+1);
					bb = (int)(Math.random()*254+1);
				
					//插入題目數量
				    //out.print("<div class='optionD'  style = ' top: "+ (30 + countt*40) + "px; width: " + (50 + ? * 20 ) + "px; color: rgba(" + rr + "," + gg + "," + bb + ",0.6);" + "'>" + d + "/" + ? +"</div>");
					//out.print("<t id=" + E[totalOption+countt] +" class='optionD'  style = ' top: "+ (30 + countt*40) + "px;" + "width: 80%' value=" + 	y.get(count).getAnswerList().get(countt) + ">" + d + "/" + 	y.get(count).getAnswerList().get(countt) +"</t>");
					out.print("<p class='optionP' style='top: " + (40 + countt*45) + "px; '>" + d + " / " + 	y.get(count).getAnswerList().get(countt) +"</p><div id=" + E[totalOption+countt] +" class='optionD'  style = ' top: "+ (30 + countt*40) + "px; width:" + (70*y.get(count).getAnswerList().get(countt)/total) +"%;' value=" + 	y.get(count).getAnswerList().get(countt) + "></div>");
					countt++;
			    }
				out.print("</div></div>");
				count++;
				totalOption += countt;
			}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id = \"gotopD\" href = \"#top\" hidden = \"true\">\r\n");
      out.write("\t\t<a href = \"#top\" id = \"gotopP\">Top</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<div display=\"hidden\" value=\"");
      out.print(totalOption);
      out.write("\" id=\"littleSheepWithFire\"></div>\r\n");
      out.write("\t<div display=\"hidden\" value=\"");
      out.print(total);
      out.write("\" id=\"girlIsOnFire\"></div>\r\n");
      out.write("\t\r\n");
      out.write("   </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
